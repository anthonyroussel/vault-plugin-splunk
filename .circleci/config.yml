version: 2

defaultenv: &defaultenv
  environment:
    SPLUNK_ADDR: https://localhost:8089
    SPLUNK_PASSWORD: test1234
    SPLUNK_START_ARGS: --accept-license

jobs:
  build:
    working_directory: /go/src/github.com/splunk/vault-plugin-splunk
    docker:
      - image: circleci/golang:1.12
        <<: *defaultenv
      - image: splunk/splunk:latest
        user: root
        <<: *defaultenv
    environment:
      - GOCACHE: /tmp/go/cache
    steps:
      - checkout

      - restore_cache:
          name: Restoring Cache for vendor
          key: gopkg-{{ arch }}-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
              - /go/src/github.com/splunk/vault-plugin-splunk/vendor
      - restore_cache:
          name: Restoring Cache for build
          keys:
              - build-cache-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_PREVIOUS_BUILD_NUM }}
          paths:
              - /tmp/go/cache

      - run:
          name: Build
          command: make build DEPFLAGS=-v
      - run:
          name: Wait for Splunk Container
          command: curl -4sSk --retry 40 --retry-connrefused --retry-delay 3 -o /dev/null ${SPLUNK_ADDR}
      - run:
          name: Test
          command: make test TESTREPORT=test-results/go/results.xml
      - run:
          name: Code Quality
          command: make lint
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-results/
      - store_artifacts:
          path: /go/bin/vault-plugin-splunk

      - save_cache:
          name: Saving Cache for vendor
          key: gopkg-{{ arch }}-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
              - /go/src/github.com/splunk/vault-plugin-splunk/vendor
      - save_cache:
          name: Saving Cache for build
          key: build-cache-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_BUILD_NUM }}
          paths:
              - /tmp/go/cache

      - persist_to_workspace:
            root: /go/bin
            # Must be relative path from root
            paths:
                - vault-plugin-splunk

  publish-github-release:
    docker:
      - image: circleci/golang:1.12
    steps:
      - attach_workspace:
          at: ./artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            VERSION=$(artifacts/vault-plugin-splunk -version | awk '{print $1}')
            zip -jr vault-plugin-splunk artifacts/
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -recreate ${VERSION} ./vault-plugin-splunk.zip

workflows:
  version: 2
  workflow:
    jobs:
      - build:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - publish-github-release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
